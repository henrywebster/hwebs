name: Deploy to GitHub Pages

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  HWEBS_INFO_CLIENT: sqlite
  HWEBS_INFO_SQLITE_DB_FILE: packages/hwebs-info/src/db/test.db

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [main]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.28.x

      - name: Install
        run: pnpm install

      - name: Check Format
        run: pnpm nx format:check

      - name: Lint
        run: pnpm nx run-many --target=lint --parallel=3

      - name: Build
        # TODO figure out how to only build changed; next step fails if not built
        # run: npx nx affected --target=build --parallel=3
        run: npx nx run-many --target=build --parallel=3

      - name: Run DynamoDB
        uses: rrainn/dynamodb-action@v2.0.1

      - name: Test
        run: npx nx run-many --target=test --parallel=3

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './packages/hwebs-info/dist/'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
